Bootstrap: docker
From: ubuntu:22.04

%help
	This is an Apptainer container of Ubuntu 22.04 with TurboVNC and XFCE installed.
	It is intended to be used as a base for other containers that need a VNC server.
	It is designed to be run on the Hyak cluster at the University of Washington with the hyakvnc script.

%setup
	if command -v git >/dev/null 2>&1 && git tag 2>/dev/null; then
		IMAGE_VCS_URL="${IMAGE_VCS_URL:-$(git config --get remote.origin.url || true)}"
		[ -z "${IMAGE_URL:-}" ] && [ -n "${IMAGE_VCS_URL:-}" ] && IMAGE_URL="${IMAGE_VCS_URL%%.git}"
		IMAGE_VCS_REF="${IMAGE_VCS_REF:-$(git rev-parse --short HEAD || true)}"
		
		command -v sed >/dev/null 2>&1 && IMAGE_TAG="${IMAGE_TAG:-"$(git tag --points-at HEAD --list '*@*' --sort=-"creatordate:iso" | sed 's/.*@//;1q')"}"
		IMAGE_TAG="${IMAGE_TAG:-latest}"
		IMAGE_TITLE="${IMAGE_TITLE:-"${PWD##*/}"}"
		IMAGE_VERSION="${IMAGE_VERSION:-${IMAGE_TAG:-}}"

		[ -n "${IMAGE_URL:-}" ] && echo "org.label-schema.url \"${IMAGE_URL}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
		[ -n "${IMAGE_VCS_URL:-}" ] && echo "org.label-schema.vcs-url \"${IMAGE_VCS_URL}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
		[ -n "${IMAGE_VCS_REF:-}" ] && echo "org.label-schema.vcs-ref \"${IMAGE_VCS_REF}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
		[ -n "${IMAGE_TITLE:-}" ] && echo "org.label-schema.title \"${IMAGE_TITLE}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
		[ -n "${IMAGE_VERSION:-}" ] && echo "org.label-schema.version \"${IMAGE_VERSION}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
		[ -n "${IMAGE_VCS_URL:-}" ] && echo "org.opencontainers.image.source \"${IMAGE_VCS_URL}\"" >> "${APPTAINER_ROOTFS}/.build.labels"
	fi

%labels
	org.label-schema.vendor "University of Washington Department of Psychology"
	org.label-schema.description "A container to start a VNC server for hyakvnc"
	org.opencontainers.image.description "A container to start a VNC server for hyakvnc"
	org.opencontainers.image.authors "Altan Orhon (altan@uw.edu)"
	hyakvnc_image_required_binds "/vnc"

%files
	../_common/scripts/install-turbovnc.sh /opt/setup/scripts/install-turbovnc.sh
	../_common/configs/xfce /opt/setup/configs/xfce

%environment
	export LANG=en_US.utf8
	export LC_ALL=en_US.utf8
	export LC_COLLATE=C
	export SHELL="${SHELL:-/bin/bash}"
	export PATH="/opt/TurboVNC/bin:${PATH}"
	export TVNC_WM=xfce-hyakvnc
	export HYAKVNC_VNC_PASSWORD="${HYAKVNC_VNC_PASSWORD:-password}"
	export HYAKVNC_VNC_DISPLAY="${HYAKVNC_VNC_DISPLAY:-:10}"
	export HYAKVNC_VNC_DIR="${HYAKVNC_VNC_DIR:-/vnc}"

%post
	set -e # Exit on error
	set -x # Print commands as they are executed
	export DEBIAN_FRONTEND=noninteractive
	
	apt-get update -y -qq
	apt-get install apt-utils

	# Don't generate these locales
	mkdir -p /var/lib/locales/supported.d
	for localename in fr de zh-hant ja es it zh-hans pt ru ar; do
		touch "/var/lib/locales/supported.d/${localename}" && chmod a-r "/var/lib/locales/supported.d/${localename}"
	done

	# Generate the locales
	apt-get install -y locales
	localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.utf8

	# Set the locale environment variables permanently:
	echo 'LANG=en_US.utf8' >> /etc/environment
	echo 'LC_ALL=en_US.utf8' >> /etc/environment
	echo 'LC_COLLATE=C' >> /etc/environment
	export LANG=en_US.utf8
	export LC_ALL=en_US.utf8
	export LC_COLLATE=C
	
	apt-get install -yq \
		bash-completion \
		bash-doc \
		bc \
		binutils \
		bzip2 \
		curl \
		file \
		git \
		less \
		make \
		nano \
		netcat-openbsd \
		openssh-client \
		psmisc \
		python3 \
		rsync \
		vim-tiny \
		wget \
		whiptail \
		zip
	
	# Stop apt from installing audio packages (they don't work on VNC):
	apt-mark hold xfce4-pulseaudio-plugin pavucontrol pulseaudio pipewire pipewire-bin pipewire-pulse

	# Install XFCE and some apps:
	apt-get install -yq \
		libxfce4ui-utils \
		thunar \
		xfce4-appfinder \
		xfce4-panel \
 		xfce4-session \
		xfce4-settings \
		xfconf \
		xfdesktop4 \
		xfwm4 \
		desktop-base \
		tango-icon-theme \
		elementary-icon-theme \
		elementary-xfce-icon-theme \
		greybird-gtk-theme \
		thunar-volman \
		xfce4-notifyd \
		xorg \
		mousepad \
		ristretto \
		thunar-archive-plugin \
 		xfce4-datetime-plugin \
		xfce4-screenshooter \
		xfce4-taskmanager \
		xfce4-terminal \
		xfce4-whiskermenu-plugin \
		xfce4-indicator-plugin \
		xfce4-notes-plugin \
 		fonts-dejavu-core \
		fonts-freefont-ttf \
		fonts-ubuntu \
		fonts-powerline \
		xclip \
		xdg-utils \
		xsel \
		zenity

	# Set xfce4-terminal as default terminal emulator:
	update-alternatives --set x-terminal-emulator /usr/bin/xfce4-terminal.wrapper

	# Install dependencies required by FreeSurfer:
	apt-get install -yq --no-install-recommends \
		csh \
		gettext \
		language-pack-en \
		libgomp1 \
		libjpeg62 \
		libncurses5 \
		libquadmath0 \
		libx11-dev \
		libxcb-icccm4 \
		libxcb-image0 \
		libxcb-keysyms1 \
		libxcb-render-util0 \
		libxcb-xinerama0 \
		libxcb-xinput0 \
		libxcb-xkb1 \
		libxkbcommon-x11-0 \
		tcsh \
		xorg-dev \
		xterm

	# Clean up packages:
	apt-get clean -y -qq && rm -rf /var/lib/apt/lists/*

	# Copy configs:
	rsync -avi --no-p --no-g --chmod=ugo=rwX /opt/setup/configs/xfce/etc/ /etc/
	rsync -avi --no-p --no-g --chmod=ugo=rwX /opt/setup/configs/xfce/usr/ /usr/

	# Install TurboVNC:
	/opt/setup/scripts/install-turbovnc.sh && rm -rf /opt/setup/scripts/install-turbovnc.sh
	echo '$vncUserDir = "$ENV{HYAKVNC_VNC_DIR}";' >>/etc/turbovncserver.conf

%apprun vncserver

	nodename="$(uname -n)" || nodename="${HOST:-}" || nodename="unknown"
	APPTAINER_NAME="${APPTAINER_NAME:-hyakvnc-vncserver}"
	_errecho() { echo "${APPTAINER_NAME:-hyakvnc-vncserver}: ${*}" >&2; }
	_errexit() { _errecho "${*}"; exit 1; }
	
	# Set up the VNC directory
	if [ ! -d "${HYAKVNC_VNC_DIR:-}" ] || [ ! -w "${HYAKVNC_VNC_DIR:-}" ]; then
		_errecho "VNC directory ${HYAKVNC_VNC_DIR:-} does not exist or is not writable. Will try to use /tmp"
		hyakvnc_vncserver_tmpdir=$(mktemp -d -t "hyakvnc-vncserver-${HOST:-}-XXXXXX") || _errexit "Could not create temporary directory."
		_errecho "Using temporary directory ${hyakvnc_vncserver_tmpdir}"
		export HYAKVNC_VNC_DIR="${hyakvnc_vncserver_tmpdir}"
	fi

	if [ ! -d "${HYAKVNC_VNC_DIR:-}" ] || [ ! -w "${HYAKVNC_VNC_DIR:-}" ]; then
		_errexit "VNC directory ${HYAKVNC_VNC_DIR:-} does not exist or is not writable."
	fi

	export HYAKVNC_VNC_LOG="${HYAKVNC_VNC_LOG:-${HYAKVNC_VNC_DIR}/vnc.log}"
	export HYAKVNC_VNC_SOCKET="${HYAKVNC_VNC_SOCKET:-${HYAKVNC_VNC_DIR}/socket.uds}"
	export XAUTHORITY="${HYAKVNC_VNC_DIR}/.Xauthority"

	echo "${HYAKVNC_VNC_PASSWORD:-password}" | vncpasswd -f >"${HYAKVNC_VNC_DIR}/passwd" | _errexit "Could not set VNC password."
	chmod 600 "${HYAKVNC_VNC_DIR}/passwd" || _errexit "Could not set permissions on VNC password file."
	_errecho "Set VNC password to ${HYAKVNC_VNC_PASSWORD:-}"
	echo "${nodename}" >"${HYAKVNC_VNC_DIR}/hostname" || _errexit "Could not write hostname."
	printenv >"${HYAKVNC_VNC_DIR}/environment" || _errexit "Could not write environment variables."
	
	# Set up the vncserver arguments
	if [ -n "${HYAKVNC_VNC_PORT:-}" ]; then
		set -- -rfbport "${HYAKVNC_VNC_PORT}" "${@}"
	else
		set -- -rfbunixpath "${HYAKVNC_VNC_SOCKET}" "${@}"
	fi
	set -- "${HYAKVNC_VNC_DISPLAY}" -fg -log "${HYAKVNC_VNC_LOG}" "${@}"

	_errecho "HYAKVNC_VNC_DIR=${HYAKVNC_VNC_DIR}"
	_errecho "Starting vncserver ${*}"

	trap '[ -n "${HYAKVNC_VNC_SOCKET:-}" ] && rm -f "${HYAKVNC_VNC_SOCKET}" 2>/dev/null' INT QUIT TERM TSTP
	vncserver "$@" || _errexit "vncserver failed (exit code ${?})"
	trap - INT QUIT TERM TSTP
	_errecho "Exiting hyakvnc-vncserver"

%apprun vnckill
	vncserver -kill "${HYAKVNC_USER_DISPLAY}"

%runscript
	# Run app vncserver:
	exec /scif/apps/vncserver/scif/runscript "$@"


